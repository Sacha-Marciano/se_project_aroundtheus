!function(){"use strict";class e{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._buttonSubmit=this._form.querySelector(this._submitButtonSelector)}_setEventsListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(this._form,e,this._inputErrorClass,this._errorClass),this._toggleButtonState(this._inputList,this._buttonSubmit,this._inactiveButtonClass)}))}))}_toggleButtonState(e,t,s){this._hasInvalidInput(e)?this.disableButton():(t.classList.remove(s),t.disabled=!1)}_hasInvalidInput(e){return e.some((e=>!e.validity.valid))}_checkInputValidity(e,t,s,i){t.validity.valid?this._hideInputError(e,t,s,i):this._showInputError(e,t,t.validationMessage,s,i)}_showInputError(e,t,s,i,r){const n=e.querySelector(`.${t.id}-error`);t.classList.add(i),n.textContent=s,n.classList.add(r)}_hideInputError(e,t,s,i){const r=e.querySelector(`.${t.id}-error`);t.classList.remove(s),r.classList.remove(i),r.textContent=""}enableValidation(){this.disableButton(),this._setEventsListeners()}disableButton(){this._buttonSubmit.classList.add(this._inactiveButtonClass),this._buttonSubmit.disabled=!0}}class t{constructor(e,t,s,i,r){this._name=e.name,this._link=e.link,this.id=e._id,this.isLiked=e.isLiked,this._template=t,this._handleImageClick=s,this._newCard=document.querySelector(this._template).content.querySelector(".card").cloneNode(!0),this._handleDeleteClick=i,this._toggleServerLike=r}renderCard(){return this._cardImageElement=this._newCard.querySelector(".card__image"),this._cardNameElement=this._newCard.querySelector(".card__name"),this._cardLikeElement=this._newCard.querySelector(".card__like-button"),this._cardTrashElement=this._newCard.querySelector(".card__delete-button"),this._cardImageElement.alt=this._name,this._cardImageElement.src=this._link,this._cardNameElement.textContent=this._name,this._setEventListeners(),this.toggleLike(),this._newCard}_setEventListeners(){this._cardImageElement.addEventListener("click",(()=>{this._handleImageClick(this)})),this._cardLikeElement.addEventListener("click",(e=>{e.stopPropagation(),this._toggleServerLike(this)})),this._cardTrashElement.addEventListener("click",(e=>{e.stopPropagation(),this._handleDeleteClick(this)}))}toggleLike(){this.isLiked?this._cardLikeElement.classList.add("card__like-button_liked"):this._cardLikeElement.classList.remove("card__like-button_liked")}deleteCard(){this._newCard.remove()}}class s{constructor(e){this._popup=document.querySelector(e),this._closeButton=this._popup.querySelector(".modal__button_type_close"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()})),this._popup.addEventListener("mousedown",(e=>{e.target===this._popup&&this.close()}))}}class i extends s{constructor(e,t){super(e),this.form=this._popup.querySelector(".modal__container"),this._handleFormSubmit=t,this._inputs=this.form.querySelectorAll(".modal__input"),this._submitButton=this.form.querySelector(".modal__button_type_submit"),this._originalText=this._submitButton.textContent}_getInputValues(){const e={};return this._inputs.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this.form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues(),this._submitButton)})),super.setEventListeners()}renderLoading(e,t){this._submitButton.textContent=e?t:this._originalText}}const r={formSelector:".modal__container",inputSelector:".modal__input",submitButtonSelector:".modal__button_type_submit",inactiveButtonClass:"modal__button_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__input-error"},n=new class{constructor(e){let{baseURL:t,headers:s}=e;this._baseURL=t,this._headers=s}getCurrentUser(){return this._request(`${this._baseURL}/users/me`,{method:"GET",headers:this._headers})}updateCurrentUser(e){return this._request(`${this._baseURL}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})})}updateCurrentAvatar(e){return this._request(`${this._baseURL}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.link})})}getAllCards(){return this._request(`${this._baseURL}/cards`,{method:"GET",headers:this._headers})}postCard(e){return this._request(`${this._baseURL}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})})}deleteCard(e){return this._request(`${this._baseURL}/cards/${e}`,{method:"DELETE",headers:this._headers})}putLike(e){return this._request(`${this._baseURL}/cards/${e}/likes`,{method:"PUT",headers:this._headers})}deleteLike(e){return this._request(`${this._baseURL}/cards/${e}/likes`,{method:"DELETE",headers:this._headers})}_request(e,t){return fetch(e,t).then(this._checkResponse)}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialData(){return Promise.all([this.getCurrentUser(),this.getAllCards()])}}({baseURL:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"a50cd7e6-b371-411e-bfcd-861efcd7c545","Content-Type":"application/json"}}),o=document.querySelector(".profile__button_type_edit"),a=document.querySelector(".profile__button_type_add"),d=document.querySelector(".image__container"),l=new class{constructor(e,t){let{renderer:s}=e;this._container=document.querySelector(t),this._renderer=s}renderItems(e){e.forEach((e=>{const t=this._renderer(e);this.addItem(t)}))}addItem(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"append";this._container[t](e)}}({renderer:E},".cards__list"),h=new class{constructor(e){let{nameSelector:t,descriptionSelector:s,avatarSelector:i}=e;this._name=document.querySelector(t),this._description=document.querySelector(s),this._avatar=document.querySelector(i)}getUserInfo(){return{name:this._name.textContent,about:this._description.textContent,avatar:this._avatar}}setUserInfo(e){this._name.textContent=e.name,this._description.textContent=e.about,this._avatar.src=e.avatar}}({nameSelector:".profile__name",descriptionSelector:".profile__description",avatarSelector:".profile__image"}),u=new class extends s{constructor(e){super(e),this._image=this._popup.querySelector(".modal__image"),this._modalTitle=this._popup.querySelector(".modal__image-title")}open(e){this._image.src=e._link,this._image.alt=e._name,this._modalTitle.textContent=e._name,super.open()}}("#image-modal-id"),_=new i("#edit-modal-id",(function(e){f((function(){return n.updateCurrentUser(e).then((e=>{h.setUserInfo(e),L.disableButton()}))}),_)})),c=new i("#add-modal-id",(function(e){f((function(){return n.postCard(e).then((e=>{l.addItem(E(e),"prepend"),c.form.reset(),b.disableButton()}))}),c)})),m=new i("#avatar-modal-id",(function(e){f((function(){return n.updateCurrentAvatar(e).then((e=>{h.setUserInfo(e),m.form.reset(),v.disableButton()}))}),m)})),p=new class extends s{constructor(e,t){super(e),this.form=this._popup.querySelector(".modal__container"),this._handleFormSubmit=t,this._submitButton=this.form.querySelector(".modal__button_type_submit"),this._originalText=this._submitButton.textContent}getCardInfo(e){this._card=e}setEventListeners(){this.form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._card)})),super.setEventListeners()}renderLoading(e,t){this._submitButton.textContent=e?t:this._originalText}}("#delete-modal-id",(function(e){f((function(){return n.deleteCard(e.id).then((()=>{e.deleteCard()}))}),p,"Deleting...")})),L=new e(r,_.form),b=new e(r,c.form),v=new e(r,m.form);function E(e){return new t(e,"#card__template",g,C,S).renderCard()}function g(e){u.open(e)}function f(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";t.renderLoading(!0,s),e().then((()=>{t.close()})).catch(console.error).finally((()=>{t.renderLoading(!1)}))}function C(e){p.getCardInfo(e),p.open()}function S(e){e.isLiked?n.deleteLike(e.id).then((()=>{e.isLiked=!e.isLiked,e.toggleLike()})).catch((e=>{console.log(e)})):n.putLike(e.id).then((()=>{e.isLiked=!e.isLiked,e.toggleLike()})).catch((e=>{console.log(e)}))}n.getInitialData().then((e=>{let[t,s]=e;h.setUserInfo(t),l.renderItems(s)})).catch((e=>{console.log(e)})),L.enableValidation(),b.enableValidation(),v.enableValidation(),o.addEventListener("click",(()=>{var e;e=h.getUserInfo(),_.form.querySelector("#name-id").value=e.name,_.form.querySelector("#aboutMe-id").value=e.about,_.open()})),d.addEventListener("click",(()=>{m.open()})),a.addEventListener("click",(()=>c.open())),u.setEventListeners(),_.setEventListeners(),c.setEventListeners(),p.setEventListeners(),m.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RUFBUzFILFFBQzdCMEgsRUFBU3pHLFlBQVksSUFFdEI0RyxPQUFPSSxJQUNOSCxRQUFRSSxJQUFJRCxFQUFJLElBakJwQm5GLEVBQ0dvQixRQUFRd0QsRUFBU3pJLElBQ2pCc0YsTUFBSyxLQUNKbUQsRUFBUzFILFNBQVcwSCxFQUFTMUgsUUFDN0IwSCxFQUFTekcsWUFBWSxJQUV0QjRHLE9BQU9JLElBQ05ILFFBQVFJLElBQUlELEVBQUksR0FheEIsQ0FXQW5GLEVBQ0dpQyxpQkFDQVIsTUFBS3hCLElBQThCLElBQTVCb0YsRUFBYUMsR0FBVXJGLEVBQzdCb0QsRUFBU08sWUFBWXlCLEdBQ3JCOUMsRUFBWUssWUFBWTBDLEVBQVUsSUFFbkNQLE9BQU9JLElBQ05ILFFBQVFJLElBQUlELEVBQUksSUFJcEJqQixFQUFrQjVILG1CQUNsQitILEVBQWlCL0gsbUJBQ2pCaUksRUFBb0JqSSxtQkFHcEI4RixFQUFXeEgsaUJBQWlCLFNBQVMsS0F4QnJDLElBQTJCOEYsSUF5QlAyQyxFQUFTTSxjQXhCM0JLLEVBQVUxSyxLQUFLb0IsY0FBYyxZQUFZaUYsTUFBUWUsRUFBSTVELEtBQ3JEa0gsRUFBVTFLLEtBQUtvQixjQUFjLGVBQWVpRixNQUFRZSxFQUFJSSxNQXdCeERrRCxFQUFVcEYsTUFBTSxJQUVsQjBELEVBQVcxSCxpQkFBaUIsU0FBUyxLQUNuQzBKLEVBQVkxRixNQUFNLElBRXBCeUQsRUFBVXpILGlCQUFpQixTQUFTLElBQU11SixFQUFTdkYsU0FDbkRpRixFQUFXN0Usb0JBQ1hnRixFQUFVaEYsb0JBQ1ZtRixFQUFTbkYsb0JBQ1R3RixFQUFZeEYsb0JBQ1pzRixFQUFZdEYsbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9wYWdlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL3V0aWxzL0FwaS5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9Qb3B1cERlbGV0ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICBjb25zdHJ1Y3RvcihzZXR0aW5ncywgZm9ybSkge1xyXG4gICAgdGhpcy5fZm9ybVNlbGVjdG9yID0gc2V0dGluZ3MuZm9ybVNlbGVjdG9yO1xyXG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IHNldHRpbmdzLmlucHV0U2VsZWN0b3I7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IHNldHRpbmdzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xyXG4gICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IHNldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3M7XHJcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBzZXR0aW5ncy5pbnB1dEVycm9yQ2xhc3M7XHJcbiAgICB0aGlzLl9lcnJvckNsYXNzID0gc2V0dGluZ3MuZXJyb3JDbGFzcztcclxuICAgIHRoaXMuX2Zvcm0gPSBmb3JtO1xyXG4gICAgdGhpcy5faW5wdXRMaXN0ID0gQXJyYXkuZnJvbShcclxuICAgICAgdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0U2VsZWN0b3IpXHJcbiAgICApO1xyXG4gICAgdGhpcy5fYnV0dG9uU3VibWl0ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcclxuICB9XHJcblxyXG4gIF9zZXRFdmVudHNMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KFxyXG4gICAgICAgICAgdGhpcy5fZm9ybSxcclxuICAgICAgICAgIGlucHV0RWxlbWVudCxcclxuICAgICAgICAgIHRoaXMuX2lucHV0RXJyb3JDbGFzcyxcclxuICAgICAgICAgIHRoaXMuX2Vycm9yQ2xhc3NcclxuICAgICAgICApO1xyXG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKFxyXG4gICAgICAgICAgdGhpcy5faW5wdXRMaXN0LFxyXG4gICAgICAgICAgdGhpcy5fYnV0dG9uU3VibWl0LFxyXG4gICAgICAgICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzc1xyXG4gICAgICAgICk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBfdG9nZ2xlQnV0dG9uU3RhdGUoaW5wdXRMaXN0LCBidXR0b25TdWJtaXQsIGluYWN0aXZlQnV0dG9uQ2xhc3MpIHtcclxuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoaW5wdXRMaXN0KSkge1xyXG4gICAgICB0aGlzLmRpc2FibGVCdXR0b24oKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGJ1dHRvblN1Ym1pdC5jbGFzc0xpc3QucmVtb3ZlKGluYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICBidXR0b25TdWJtaXQuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIF9oYXNJbnZhbGlkSW5wdXQoaW5wdXRMaXN0KSB7XHJcbiAgICByZXR1cm4gaW5wdXRMaXN0LnNvbWUoKGlucHV0KSA9PiB7XHJcbiAgICAgIHJldHVybiAhaW5wdXQudmFsaWRpdHkudmFsaWQ7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIF9jaGVja0lucHV0VmFsaWRpdHkoZm9ybSwgaW5wdXRFbGVtZW50LCBpbnB1dEVycm9yQ2xhc3MsIGVycm9yQ2xhc3MpIHtcclxuICAgIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XHJcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKFxyXG4gICAgICAgIGZvcm0sXHJcbiAgICAgICAgaW5wdXRFbGVtZW50LFxyXG4gICAgICAgIGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZSxcclxuICAgICAgICBpbnB1dEVycm9yQ2xhc3MsXHJcbiAgICAgICAgZXJyb3JDbGFzc1xyXG4gICAgICApO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoZm9ybSwgaW5wdXRFbGVtZW50LCBpbnB1dEVycm9yQ2xhc3MsIGVycm9yQ2xhc3MpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgX3Nob3dJbnB1dEVycm9yKFxyXG4gICAgZm9ybSxcclxuICAgIGlucHV0RWxlbWVudCxcclxuICAgIGVycm9yTWVzc2FnZSxcclxuICAgIGlucHV0RXJyb3JDbGFzcyxcclxuICAgIGVycm9yQ2xhc3NcclxuICApIHtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IGZvcm0ucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQoaW5wdXRFcnJvckNsYXNzKTtcclxuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGVycm9yTWVzc2FnZTtcclxuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKGVycm9yQ2xhc3MpO1xyXG4gIH1cclxuXHJcbiAgX2hpZGVJbnB1dEVycm9yKGZvcm0sIGlucHV0RWxlbWVudCwgaW5wdXRFcnJvckNsYXNzLCBlcnJvckNsYXNzKSB7XHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSBmb3JtLnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKGlucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShlcnJvckNsYXNzKTtcclxuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XHJcbiAgfVxyXG5cclxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xyXG4gICAgdGhpcy5kaXNhYmxlQnV0dG9uKCk7XHJcbiAgICB0aGlzLl9zZXRFdmVudHNMaXN0ZW5lcnMoKTtcclxuICB9XHJcblxyXG4gIGRpc2FibGVCdXR0b24oKSB7XHJcbiAgICB0aGlzLl9idXR0b25TdWJtaXQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgIHRoaXMuX2J1dHRvblN1Ym1pdC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgeyBGb3JtVmFsaWRhdG9yIH07XHJcbiIsImNsYXNzIENhcmQge1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgZGF0YSxcclxuICAgIGNhcmRTZWxlY3RvcixcclxuICAgIGhhbmRsZUltYWdlQ2xpY2ssXHJcbiAgICBoYW5kbGVEZWxldGVDbGljayxcclxuICAgIHRvZ2dsZVNlcnZlckxpa2VcclxuICApIHtcclxuICAgIHRoaXMuX25hbWUgPSBkYXRhLm5hbWU7XHJcbiAgICB0aGlzLl9saW5rID0gZGF0YS5saW5rO1xyXG4gICAgdGhpcy5pZCA9IGRhdGEuX2lkO1xyXG4gICAgdGhpcy5pc0xpa2VkID0gZGF0YS5pc0xpa2VkO1xyXG4gICAgdGhpcy5fdGVtcGxhdGUgPSBjYXJkU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrID0gaGFuZGxlSW1hZ2VDbGljaztcclxuICAgIHRoaXMuX25ld0NhcmQgPSBkb2N1bWVudFxyXG4gICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLl90ZW1wbGF0ZSlcclxuICAgICAgLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkXCIpXHJcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgICB0aGlzLl9oYW5kbGVEZWxldGVDbGljayA9IGhhbmRsZURlbGV0ZUNsaWNrO1xyXG4gICAgdGhpcy5fdG9nZ2xlU2VydmVyTGlrZSA9IHRvZ2dsZVNlcnZlckxpa2U7XHJcbiAgfVxyXG5cclxuICByZW5kZXJDYXJkKCkge1xyXG4gICAgdGhpcy5fY2FyZEltYWdlRWxlbWVudCA9IHRoaXMuX25ld0NhcmQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKTtcclxuICAgIHRoaXMuX2NhcmROYW1lRWxlbWVudCA9IHRoaXMuX25ld0NhcmQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19uYW1lXCIpO1xyXG4gICAgdGhpcy5fY2FyZExpa2VFbGVtZW50ID0gdGhpcy5fbmV3Q2FyZC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtYnV0dG9uXCIpO1xyXG4gICAgdGhpcy5fY2FyZFRyYXNoRWxlbWVudCA9IHRoaXMuX25ld0NhcmQucXVlcnlTZWxlY3RvcihcclxuICAgICAgXCIuY2FyZF9fZGVsZXRlLWJ1dHRvblwiXHJcbiAgICApO1xyXG5cclxuICAgIHRoaXMuX2NhcmRJbWFnZUVsZW1lbnQuYWx0ID0gdGhpcy5fbmFtZTtcclxuICAgIHRoaXMuX2NhcmRJbWFnZUVsZW1lbnQuc3JjID0gdGhpcy5fbGluaztcclxuICAgIHRoaXMuX2NhcmROYW1lRWxlbWVudC50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XHJcblxyXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIHRoaXMudG9nZ2xlTGlrZSgpO1xyXG4gICAgcmV0dXJuIHRoaXMuX25ld0NhcmQ7XHJcbiAgfVxyXG5cclxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9jYXJkSW1hZ2VFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2sodGhpcyk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLl9jYXJkTGlrZUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldnQpID0+IHtcclxuICAgICAgZXZ0LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICB0aGlzLl90b2dnbGVTZXJ2ZXJMaWtlKHRoaXMpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5fY2FyZFRyYXNoRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xyXG4gICAgICBldnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgIHRoaXMuX2hhbmRsZURlbGV0ZUNsaWNrKHRoaXMpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICB0b2dnbGVMaWtlKCkge1xyXG4gICAgaWYgKHRoaXMuaXNMaWtlZCkge1xyXG4gICAgICB0aGlzLl9jYXJkTGlrZUVsZW1lbnQuY2xhc3NMaXN0LmFkZChcImNhcmRfX2xpa2UtYnV0dG9uX2xpa2VkXCIpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fY2FyZExpa2VFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJjYXJkX19saWtlLWJ1dHRvbl9saWtlZFwiKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGRlbGV0ZUNhcmQoKSB7XHJcbiAgICB0aGlzLl9uZXdDYXJkLnJlbW92ZSgpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IHsgQ2FyZCB9O1xyXG4iLCJjbGFzcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5fcG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fY2xvc2VCdXR0b24gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19idXR0b25fdHlwZV9jbG9zZVwiKTtcclxuICAgIHRoaXMuX2hhbmRsZUVzY0Nsb3NlID0gdGhpcy5faGFuZGxlRXNjQ2xvc2UuYmluZCh0aGlzKTtcclxuICB9XHJcblxyXG4gIG9wZW4oKSB7XHJcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QuYWRkKFwibW9kYWxfb3BlbmVkXCIpO1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LnJlbW92ZShcIm1vZGFsX29wZW5lZFwiKTtcclxuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXl1cFwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgfVxyXG5cclxuICBfaGFuZGxlRXNjQ2xvc2UoZXZ0KSB7XHJcbiAgICBpZiAoZXZ0LmtleSA9PT0gXCJFc2NhcGVcIikge1xyXG4gICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2Nsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH0pO1xyXG4gICAgdGhpcy5fcG9wdXAuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGlmIChldnQudGFyZ2V0ID09PSB0aGlzLl9wb3B1cCkge1xyXG4gICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgeyBQb3B1cCB9O1xyXG4iLCJpbXBvcnQgeyBQb3B1cCB9IGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5jbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQpIHtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5mb3JtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY29udGFpbmVyXCIpO1xyXG4gICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XHJcbiAgICB0aGlzLl9pbnB1dHMgPSB0aGlzLmZvcm0ucXVlcnlTZWxlY3RvckFsbChcIi5tb2RhbF9faW5wdXRcIik7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLmZvcm0ucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fYnV0dG9uX3R5cGVfc3VibWl0XCIpO1xyXG4gICAgdGhpcy5fb3JpZ2luYWxUZXh0ID0gdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50O1xyXG4gIH1cclxuXHJcbiAgX2dldElucHV0VmFsdWVzKCkge1xyXG4gICAgY29uc3QgaW5wdXRWYWx1ZXMgPSB7fTtcclxuICAgIHRoaXMuX2lucHV0cy5mb3JFYWNoKChpbnB1dCkgPT4ge1xyXG4gICAgICBpbnB1dFZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gaW5wdXRWYWx1ZXM7XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSwgdGhpcy5fc3VibWl0QnV0dG9uKTtcclxuICAgIH0pO1xyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICB9XHJcblxyXG4gIHJlbmRlckxvYWRpbmcoaXNMb2FkaW5nLCBsb2FkaW5nVGV4dCkge1xyXG4gICAgaWYgKGlzTG9hZGluZykge1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSBsb2FkaW5nVGV4dDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IHRoaXMuX29yaWdpbmFsVGV4dDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCB7IFBvcHVwV2l0aEZvcm0gfTtcclxuIiwiY29uc3QgdXNlclNldHRpbmdzID0ge1xyXG4gIG5hbWVTZWxlY3RvcjogXCIucHJvZmlsZV9fbmFtZVwiLFxyXG4gIGRlc2NyaXB0aW9uU2VsZWN0b3I6IFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCIsXHJcbiAgYXZhdGFyU2VsZWN0b3I6IFwiLnByb2ZpbGVfX2ltYWdlXCIsXHJcbn07XHJcblxyXG5jb25zdCB2YWxpZGF0aW9uU2V0dGluZ3MgPSB7XHJcbiAgZm9ybVNlbGVjdG9yOiBcIi5tb2RhbF9fY29udGFpbmVyXCIsXHJcbiAgaW5wdXRTZWxlY3RvcjogXCIubW9kYWxfX2lucHV0XCIsXHJcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLm1vZGFsX19idXR0b25fdHlwZV9zdWJtaXRcIixcclxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcIm1vZGFsX19idXR0b25faW5hY3RpdmVcIixcclxuICBpbnB1dEVycm9yQ2xhc3M6IFwibW9kYWxfX2lucHV0X3R5cGVfZXJyb3JcIixcclxuICBlcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dC1lcnJvclwiLFxyXG59O1xyXG5cclxuZXhwb3J0IHsgdmFsaWRhdGlvblNldHRpbmdzLCB1c2VyU2V0dGluZ3MgfTtcclxuIiwiLy9JbXBvcnQgc3R5bGVzXHJcbmltcG9ydCBcIi4vaW5kZXguY3NzXCI7XHJcblxyXG4vL0ltcG9ydCBjbGFzc2VzLCBzZXR0aW5ncyBhbmQgQVBJXHJcbmltcG9ydCB7IEZvcm1WYWxpZGF0b3IgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzXCI7XHJcbmltcG9ydCB7IENhcmQgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XHJcbmltcG9ydCB7IFNlY3Rpb24gfSBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XHJcbmltcG9ydCB7IFVzZXJJbmZvIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcclxuaW1wb3J0IHsgUG9wdXBXaXRoSW1hZ2UgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQgeyBQb3B1cFdpdGhGb3JtIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xyXG5pbXBvcnQgeyBQb3B1cERlbGV0ZSB9IGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwRGVsZXRlLmpzXCI7XHJcbmltcG9ydCB7IHZhbGlkYXRpb25TZXR0aW5ncywgdXNlclNldHRpbmdzIH0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xyXG5pbXBvcnQgeyBBcGkgfSBmcm9tIFwiLi4vdXRpbHMvQXBpLmpzXCI7XHJcblxyXG4vL0NyZWF0ZSBBUElcclxuY29uc3QgYXBpID0gbmV3IEFwaSh7XHJcbiAgYmFzZVVSTDogXCJodHRwczovL2Fyb3VuZC1hcGkuZW4udHJpcGxldGVuLXNlcnZpY2VzLmNvbS92MVwiLFxyXG4gIGhlYWRlcnM6IHtcclxuICAgIGF1dGhvcml6YXRpb246IFwiYTUwY2Q3ZTYtYjM3MS00MTFlLWJmY2QtODYxZWZjZDdjNTQ1XCIsXHJcbiAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICB9LFxyXG59KTtcclxuXHJcbi8vU2VsZWN0aW5nIGVsZW1lbnRzXHJcbmNvbnN0IGJ1dHRvbkVkaXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2J1dHRvbl90eXBlX2VkaXRcIik7XHJcbmNvbnN0IGJ1dHRvbkFkZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYnV0dG9uX3R5cGVfYWRkXCIpO1xyXG5jb25zdCBhdmF0YXJFZGl0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5pbWFnZV9fY29udGFpbmVyXCIpO1xyXG5cclxuLy9DcmVhdGUgc2VjdGlvbkNhcmQgY2xhc3NcclxuY29uc3Qgc2VjdGlvbkNhcmQgPSBuZXcgU2VjdGlvbih7IHJlbmRlcmVyOiBjcmVhdGVDYXJkIH0sIFwiLmNhcmRzX19saXN0XCIpO1xyXG5cclxuLy9DcmVhdGUgVXNlckluZm8gY2xhc3NcclxuY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8odXNlclNldHRpbmdzKTtcclxuXHJcbi8vQ3JlYXRlIHBvcHVwcyBjbGFzc2VzIGFuZCBzZXQgZXZlbnQgbGlzdGVuZXJzXHJcbmNvbnN0IHBvcHVwSW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXCIjaW1hZ2UtbW9kYWwtaWRcIik7XHJcbmNvbnN0IHBvcHVwRWRpdCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiI2VkaXQtbW9kYWwtaWRcIiwgaGFuZGxlRWRpdFN1bWJpdCk7XHJcbmNvbnN0IHBvcHVwQWRkID0gbmV3IFBvcHVwV2l0aEZvcm0oXCIjYWRkLW1vZGFsLWlkXCIsIGhhbmRsZUFkZFN1bWJpdCk7XHJcbmNvbnN0IHBvcHVwQXZhdGFyID0gbmV3IFBvcHVwV2l0aEZvcm0oXCIjYXZhdGFyLW1vZGFsLWlkXCIsIGhhbmRsZUF2YXRhclN1Ym1pdCk7XHJcbmNvbnN0IHBvcHVwRGVsZXRlID0gbmV3IFBvcHVwRGVsZXRlKFwiI2RlbGV0ZS1tb2RhbC1pZFwiLCBoYW5kbGVEZWxldGVTdWJtaXQpO1xyXG5cclxuLy9DcmVhdGUgdmFsaWRhdG9yc1xyXG5jb25zdCBmb3JtRWRpdFZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhbGlkYXRpb25TZXR0aW5ncywgcG9wdXBFZGl0LmZvcm0pO1xyXG5jb25zdCBmb3JtQWRkVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IodmFsaWRhdGlvblNldHRpbmdzLCBwb3B1cEFkZC5mb3JtKTtcclxuY29uc3QgZm9ybUF2YXRhclZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKFxyXG4gIHZhbGlkYXRpb25TZXR0aW5ncyxcclxuICBwb3B1cEF2YXRhci5mb3JtXHJcbik7XHJcblxyXG4vL0hhbmRsZXJzIGZvciBjbGFzc2VzXHJcbmZ1bmN0aW9uIGNyZWF0ZUNhcmQoaXRlbSkge1xyXG4gIGNvbnN0IGNhcmRFbGVtZW50ID0gbmV3IENhcmQoXHJcbiAgICBpdGVtLFxyXG4gICAgXCIjY2FyZF9fdGVtcGxhdGVcIixcclxuICAgIGhhbmRsZUltYWdlQ2xpY2ssXHJcbiAgICBoYW5kbGVEZWxldGVDbGljayxcclxuICAgIHRvZ2dsZVNlcnZlckxpa2VcclxuICApO1xyXG4gIHJldHVybiBjYXJkRWxlbWVudC5yZW5kZXJDYXJkKCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZUltYWdlQ2xpY2soZGF0YSkge1xyXG4gIHBvcHVwSW1hZ2Uub3BlbihkYXRhKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlU3VibWl0cyhyZXF1ZXN0LCBwb3B1cCwgbG9hZGluZ1RleHQgPSBcIlNhdmluZy4uLlwiKSB7XHJcbiAgcG9wdXAucmVuZGVyTG9hZGluZyh0cnVlLCBsb2FkaW5nVGV4dCk7XHJcbiAgcmVxdWVzdCgpXHJcbiAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgIHBvcHVwLmNsb3NlKCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIHBvcHVwLnJlbmRlckxvYWRpbmcoZmFsc2UpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZUVkaXRTdW1iaXQob2JqKSB7XHJcbiAgZnVuY3Rpb24gbWFrZVJlcXVlc3QoKSB7XHJcbiAgICByZXR1cm4gYXBpLnVwZGF0ZUN1cnJlbnRVc2VyKG9iaikudGhlbigoZGF0YSkgPT4ge1xyXG4gICAgICB1c2VySW5mby5zZXRVc2VySW5mbyhkYXRhKTtcclxuICAgICAgZm9ybUVkaXRWYWxpZGF0b3IuZGlzYWJsZUJ1dHRvbigpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBoYW5kbGVTdWJtaXRzKG1ha2VSZXF1ZXN0LCBwb3B1cEVkaXQpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVBZGRTdW1iaXQob2JqKSB7XHJcbiAgZnVuY3Rpb24gbWFrZVJlcXVlc3QoKSB7XHJcbiAgICByZXR1cm4gYXBpLnBvc3RDYXJkKG9iaikudGhlbigoZGF0YSkgPT4ge1xyXG4gICAgICBzZWN0aW9uQ2FyZC5hZGRJdGVtKGNyZWF0ZUNhcmQoZGF0YSksIFwicHJlcGVuZFwiKTtcclxuICAgICAgcG9wdXBBZGQuZm9ybS5yZXNldCgpO1xyXG4gICAgICBmb3JtQWRkVmFsaWRhdG9yLmRpc2FibGVCdXR0b24oKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgaGFuZGxlU3VibWl0cyhtYWtlUmVxdWVzdCwgcG9wdXBBZGQpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVEZWxldGVTdWJtaXQodGhpc0NhcmQpIHtcclxuICBmdW5jdGlvbiBtYWtlUmVxdWVzdCgpIHtcclxuICAgIHJldHVybiBhcGkuZGVsZXRlQ2FyZCh0aGlzQ2FyZC5pZCkudGhlbigoKSA9PiB7XHJcbiAgICAgIHRoaXNDYXJkLmRlbGV0ZUNhcmQoKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgaGFuZGxlU3VibWl0cyhtYWtlUmVxdWVzdCwgcG9wdXBEZWxldGUsIFwiRGVsZXRpbmcuLi5cIik7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZUF2YXRhclN1Ym1pdChvYmopIHtcclxuICBmdW5jdGlvbiBtYWtlUmVxdWVzdCgpIHtcclxuICAgIHJldHVybiBhcGkudXBkYXRlQ3VycmVudEF2YXRhcihvYmopLnRoZW4oKGRhdGEpID0+IHtcclxuICAgICAgdXNlckluZm8uc2V0VXNlckluZm8oZGF0YSk7XHJcbiAgICAgIHBvcHVwQXZhdGFyLmZvcm0ucmVzZXQoKTtcclxuICAgICAgZm9ybUF2YXRhclZhbGlkYXRvci5kaXNhYmxlQnV0dG9uKCk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGhhbmRsZVN1Ym1pdHMobWFrZVJlcXVlc3QsIHBvcHVwQXZhdGFyKTtcclxufVxyXG5cclxuLy9TZW5kcyBjbGljayBldmVudCBjYXJkJ3MgZGF0YSB0byBwb3B1cERlbGV0ZVxyXG5mdW5jdGlvbiBoYW5kbGVEZWxldGVDbGljayh0aGlzQ2FyZCkge1xyXG4gIHBvcHVwRGVsZXRlLmdldENhcmRJbmZvKHRoaXNDYXJkKTtcclxuICBwb3B1cERlbGV0ZS5vcGVuKCk7XHJcbn1cclxuXHJcbi8vQ2hlY2sgc3RhdGUgb2YgaXNMaWtlZCBpbiB0aGUgc2VydmVyIGFuZCB0b2dnbGUgbGlrZSBzdGF0ZSBpbiB0aGUgQVBJXHJcbmZ1bmN0aW9uIHRvZ2dsZVNlcnZlckxpa2UodGhpc0NhcmQpIHtcclxuICBpZiAoIXRoaXNDYXJkLmlzTGlrZWQpIHtcclxuICAgIGFwaVxyXG4gICAgICAucHV0TGlrZSh0aGlzQ2FyZC5pZClcclxuICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgIHRoaXNDYXJkLmlzTGlrZWQgPSAhdGhpc0NhcmQuaXNMaWtlZDtcclxuICAgICAgICB0aGlzQ2FyZC50b2dnbGVMaWtlKCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgICAgfSk7XHJcbiAgfSBlbHNlIHtcclxuICAgIGFwaVxyXG4gICAgICAuZGVsZXRlTGlrZSh0aGlzQ2FyZC5pZClcclxuICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgIHRoaXNDYXJkLmlzTGlrZWQgPSAhdGhpc0NhcmQuaXNMaWtlZDtcclxuICAgICAgICB0aGlzQ2FyZC50b2dnbGVMaWtlKCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgICAgfSk7XHJcbiAgfVxyXG59XHJcblxyXG4vL0ZpbGxzIGVkaXQgcG9wdXAgaW5wdXRzIGFjY29yZGluZyB0byBwcm9maWxlIGluZm9cclxuZnVuY3Rpb24gZmlsbFByb2ZpbGVJbnB1dHMob2JqKSB7XHJcbiAgcG9wdXBFZGl0LmZvcm0ucXVlcnlTZWxlY3RvcihcIiNuYW1lLWlkXCIpLnZhbHVlID0gb2JqLm5hbWU7XHJcbiAgcG9wdXBFZGl0LmZvcm0ucXVlcnlTZWxlY3RvcihcIiNhYm91dE1lLWlkXCIpLnZhbHVlID0gb2JqLmFib3V0O1xyXG59XHJcblxyXG4vLyAgICAgICAgICAgICAgIExPQURJTkcvUkVGUkVTSCAgICAgICAgICAgICAgICAgICAvL1xyXG5cclxuLy9DaGVjayB0aGF0IGJvdGggcmVxdWVzdCBhcmUgZnVsZmlsbGVkLCB0aGVuIGFkZCBpbmZvIGFuZCBjYXJkcyBmcm9tIEFQSSB0byBkaXNwbGF5XHJcbmFwaVxyXG4gIC5nZXRJbml0aWFsRGF0YSgpXHJcbiAgLnRoZW4oKFt1c2VyUHJvZmlsZSwgdXNlckNhcmRzXSkgPT4ge1xyXG4gICAgdXNlckluZm8uc2V0VXNlckluZm8odXNlclByb2ZpbGUpO1xyXG4gICAgc2VjdGlvbkNhcmQucmVuZGVySXRlbXModXNlckNhcmRzKTtcclxuICB9KVxyXG4gIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gIH0pO1xyXG5cclxuLy9FbmFibGUgdmFsaWRhdGlvblxyXG5mb3JtRWRpdFZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbmZvcm1BZGRWYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5mb3JtQXZhdGFyVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuXHJcbi8vU2V0IGV2ZW50IGxpc3RlbmVyc1xyXG5idXR0b25FZGl0LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgZmlsbFByb2ZpbGVJbnB1dHModXNlckluZm8uZ2V0VXNlckluZm8oKSk7XHJcbiAgcG9wdXBFZGl0Lm9wZW4oKTtcclxufSk7XHJcbmF2YXRhckVkaXQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBwb3B1cEF2YXRhci5vcGVuKCk7XHJcbn0pO1xyXG5idXR0b25BZGQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHBvcHVwQWRkLm9wZW4oKSk7XHJcbnBvcHVwSW1hZ2Uuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxucG9wdXBFZGl0LnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbnBvcHVwQWRkLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbnBvcHVwRGVsZXRlLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbnBvcHVwQXZhdGFyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiIsImNsYXNzIEFwaSB7XHJcbiAgY29uc3RydWN0b3IoeyBiYXNlVVJMLCBoZWFkZXJzIH0pIHtcclxuICAgIHRoaXMuX2Jhc2VVUkwgPSBiYXNlVVJMO1xyXG4gICAgdGhpcy5faGVhZGVycyA9IGhlYWRlcnM7XHJcbiAgfVxyXG5cclxuICBnZXRDdXJyZW50VXNlcigpIHtcclxuICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KGAke3RoaXMuX2Jhc2VVUkx9L3VzZXJzL21lYCwge1xyXG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHVwZGF0ZUN1cnJlbnRVc2VyKG9iaikge1xyXG4gICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoYCR7dGhpcy5fYmFzZVVSTH0vdXNlcnMvbWVgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgbmFtZTogb2JqLm5hbWUsXHJcbiAgICAgICAgYWJvdXQ6IG9iai5hYm91dCxcclxuICAgICAgfSksXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHVwZGF0ZUN1cnJlbnRBdmF0YXIob2JqKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fcmVxdWVzdChgJHt0aGlzLl9iYXNlVVJMfS91c2Vycy9tZS9hdmF0YXJgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgYXZhdGFyOiBvYmoubGluayxcclxuICAgICAgfSksXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGdldEFsbENhcmRzKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoYCR7dGhpcy5fYmFzZVVSTH0vY2FyZHNgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJHRVRcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcG9zdENhcmQob2JqKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fcmVxdWVzdChgJHt0aGlzLl9iYXNlVVJMfS9jYXJkc2AsIHtcclxuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIG5hbWU6IG9iai5uYW1lLFxyXG4gICAgICAgIGxpbms6IG9iai5saW5rLFxyXG4gICAgICB9KSxcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZGVsZXRlQ2FyZChjYXJkSWQpIHtcclxuICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KGAke3RoaXMuX2Jhc2VVUkx9L2NhcmRzLyR7Y2FyZElkfWAsIHtcclxuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBwdXRMaWtlKGNhcmRJZCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoYCR7dGhpcy5fYmFzZVVSTH0vY2FyZHMvJHtjYXJkSWR9L2xpa2VzYCwge1xyXG4gICAgICBtZXRob2Q6IFwiUFVUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGRlbGV0ZUxpa2UoY2FyZElkKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fcmVxdWVzdChgJHt0aGlzLl9iYXNlVVJMfS9jYXJkcy8ke2NhcmRJZH0vbGlrZXNgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgX3JlcXVlc3QodXJsLCBvcHRpb25zKSB7XHJcbiAgICByZXR1cm4gZmV0Y2godXJsLCBvcHRpb25zKS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgX2NoZWNrUmVzcG9uc2UocmVzKSB7XHJcbiAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xyXG4gIH1cclxuXHJcbiAgZ2V0SW5pdGlhbERhdGEoKSB7XHJcbiAgICByZXR1cm4gUHJvbWlzZS5hbGwoW3RoaXMuZ2V0Q3VycmVudFVzZXIoKSwgdGhpcy5nZXRBbGxDYXJkcygpXSk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgeyBBcGkgfTtcclxuIiwiY2xhc3MgU2VjdGlvbiB7XHJcbiAgY29uc3RydWN0b3IoeyByZW5kZXJlciB9LCBjb250YWluZXJTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihjb250YWluZXJTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVySXRlbXMoaXRlbXMpIHtcclxuICAgIGl0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgY29uc3QgZWxlbWVudCA9IHRoaXMuX3JlbmRlcmVyKGl0ZW0pO1xyXG4gICAgICB0aGlzLmFkZEl0ZW0oZWxlbWVudCk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGFkZEl0ZW0oZWxlbWVudCwgbWV0aG9kID0gXCJhcHBlbmRcIikge1xyXG4gICAgdGhpcy5fY29udGFpbmVyW21ldGhvZF0oZWxlbWVudCk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgeyBTZWN0aW9uIH07XHJcbiIsImNsYXNzIFVzZXJJbmZvIHtcclxuICBjb25zdHJ1Y3Rvcih7IG5hbWVTZWxlY3RvciwgZGVzY3JpcHRpb25TZWxlY3RvciwgYXZhdGFyU2VsZWN0b3IgfSkge1xyXG4gICAgdGhpcy5fbmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobmFtZVNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2Rlc2NyaXB0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihkZXNjcmlwdGlvblNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2F2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYXZhdGFyU2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBuYW1lOiB0aGlzLl9uYW1lLnRleHRDb250ZW50LFxyXG4gICAgICBhYm91dDogdGhpcy5fZGVzY3JpcHRpb24udGV4dENvbnRlbnQsXHJcbiAgICAgIGF2YXRhcjogdGhpcy5fYXZhdGFyLFxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHNldFVzZXJJbmZvKGRhdGEpIHtcclxuICAgIHRoaXMuX25hbWUudGV4dENvbnRlbnQgPSBkYXRhLm5hbWU7XHJcbiAgICB0aGlzLl9kZXNjcmlwdGlvbi50ZXh0Q29udGVudCA9IGRhdGEuYWJvdXQ7XHJcbiAgICB0aGlzLl9hdmF0YXIuc3JjID0gZGF0YS5hdmF0YXI7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgeyBVc2VySW5mbyB9O1xyXG4iLCJpbXBvcnQgeyBQb3B1cCB9IGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5jbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2ltYWdlID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9faW1hZ2VcIik7XHJcbiAgICB0aGlzLl9tb2RhbFRpdGxlID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9faW1hZ2UtdGl0bGVcIik7XHJcbiAgfVxyXG5cclxuICBvcGVuKGRhdGEpIHtcclxuICAgIHRoaXMuX2ltYWdlLnNyYyA9IGRhdGEuX2xpbms7XHJcbiAgICB0aGlzLl9pbWFnZS5hbHQgPSBkYXRhLl9uYW1lO1xyXG4gICAgdGhpcy5fbW9kYWxUaXRsZS50ZXh0Q29udGVudCA9IGRhdGEuX25hbWU7XHJcbiAgICBzdXBlci5vcGVuKCk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgeyBQb3B1cFdpdGhJbWFnZSB9O1xyXG4iLCJpbXBvcnQgeyBQb3B1cCB9IGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5jbGFzcyBQb3B1cERlbGV0ZSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0KSB7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuZm9ybSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2NvbnRhaW5lclwiKTtcclxuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5mb3JtLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2J1dHRvbl90eXBlX3N1Ym1pdFwiKTtcclxuICAgIHRoaXMuX29yaWdpbmFsVGV4dCA9IHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudDtcclxuICB9XHJcblxyXG4gIGdldENhcmRJbmZvKGNhcmQpIHtcclxuICAgIHRoaXMuX2NhcmQgPSBjYXJkO1xyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLmZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KHRoaXMuX2NhcmQpO1xyXG4gICAgfSk7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyTG9hZGluZyhpc0xvYWRpbmcsIGxvYWRpbmdUZXh0KSB7XHJcbiAgICBpZiAoaXNMb2FkaW5nKSB7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IGxvYWRpbmdUZXh0O1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gdGhpcy5fb3JpZ2luYWxUZXh0O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IHsgUG9wdXBEZWxldGUgfTtcclxuIl0sIm5hbWVzIjpbIkZvcm1WYWxpZGF0b3IiLCJjb25zdHJ1Y3RvciIsInNldHRpbmdzIiwiZm9ybSIsInRoaXMiLCJfZm9ybVNlbGVjdG9yIiwiZm9ybVNlbGVjdG9yIiwiX2lucHV0U2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvckNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiX2Vycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiX2Zvcm0iLCJfaW5wdXRMaXN0IiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsIl9idXR0b25TdWJtaXQiLCJxdWVyeVNlbGVjdG9yIiwiX3NldEV2ZW50c0xpc3RlbmVycyIsImFkZEV2ZW50TGlzdGVuZXIiLCJldnQiLCJwcmV2ZW50RGVmYXVsdCIsImZvckVhY2giLCJpbnB1dEVsZW1lbnQiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiX3RvZ2dsZUJ1dHRvblN0YXRlIiwiaW5wdXRMaXN0IiwiYnV0dG9uU3VibWl0IiwiX2hhc0ludmFsaWRJbnB1dCIsImRpc2FibGVCdXR0b24iLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJkaXNhYmxlZCIsInNvbWUiLCJpbnB1dCIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfc2hvd0lucHV0RXJyb3IiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsImVycm9yTWVzc2FnZSIsImVycm9yRWxlbWVudCIsImlkIiwiYWRkIiwidGV4dENvbnRlbnQiLCJlbmFibGVWYWxpZGF0aW9uIiwiQ2FyZCIsImRhdGEiLCJjYXJkU2VsZWN0b3IiLCJoYW5kbGVJbWFnZUNsaWNrIiwiaGFuZGxlRGVsZXRlQ2xpY2siLCJ0b2dnbGVTZXJ2ZXJMaWtlIiwiX25hbWUiLCJuYW1lIiwiX2xpbmsiLCJsaW5rIiwiX2lkIiwiaXNMaWtlZCIsIl90ZW1wbGF0ZSIsIl9oYW5kbGVJbWFnZUNsaWNrIiwiX25ld0NhcmQiLCJkb2N1bWVudCIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJfaGFuZGxlRGVsZXRlQ2xpY2siLCJfdG9nZ2xlU2VydmVyTGlrZSIsInJlbmRlckNhcmQiLCJfY2FyZEltYWdlRWxlbWVudCIsIl9jYXJkTmFtZUVsZW1lbnQiLCJfY2FyZExpa2VFbGVtZW50IiwiX2NhcmRUcmFzaEVsZW1lbnQiLCJhbHQiLCJzcmMiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJ0b2dnbGVMaWtlIiwic3RvcFByb3BhZ2F0aW9uIiwiZGVsZXRlQ2FyZCIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsIl9wb3B1cCIsIl9jbG9zZUJ1dHRvbiIsIl9oYW5kbGVFc2NDbG9zZSIsImJpbmQiLCJvcGVuIiwiY2xvc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwia2V5Iiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJ0YXJnZXQiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlRm9ybVN1Ym1pdCIsInN1cGVyIiwiX2hhbmRsZUZvcm1TdWJtaXQiLCJfaW5wdXRzIiwiX3N1Ym1pdEJ1dHRvbiIsIl9vcmlnaW5hbFRleHQiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJpbnB1dFZhbHVlcyIsInZhbHVlIiwicmVuZGVyTG9hZGluZyIsImlzTG9hZGluZyIsImxvYWRpbmdUZXh0IiwidmFsaWRhdGlvblNldHRpbmdzIiwiYXBpIiwiX3JlZiIsImJhc2VVUkwiLCJoZWFkZXJzIiwiX2Jhc2VVUkwiLCJfaGVhZGVycyIsImdldEN1cnJlbnRVc2VyIiwiX3JlcXVlc3QiLCJtZXRob2QiLCJ1cGRhdGVDdXJyZW50VXNlciIsIm9iaiIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiYWJvdXQiLCJ1cGRhdGVDdXJyZW50QXZhdGFyIiwiYXZhdGFyIiwiZ2V0QWxsQ2FyZHMiLCJwb3N0Q2FyZCIsImNhcmRJZCIsInB1dExpa2UiLCJkZWxldGVMaWtlIiwidXJsIiwib3B0aW9ucyIsImZldGNoIiwidGhlbiIsIl9jaGVja1Jlc3BvbnNlIiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsImdldEluaXRpYWxEYXRhIiwiYWxsIiwiYXV0aG9yaXphdGlvbiIsImJ1dHRvbkVkaXQiLCJidXR0b25BZGQiLCJhdmF0YXJFZGl0Iiwic2VjdGlvbkNhcmQiLCJjb250YWluZXJTZWxlY3RvciIsInJlbmRlcmVyIiwiX2NvbnRhaW5lciIsIl9yZW5kZXJlciIsInJlbmRlckl0ZW1zIiwiaXRlbXMiLCJpdGVtIiwiZWxlbWVudCIsImFkZEl0ZW0iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJjcmVhdGVDYXJkIiwidXNlckluZm8iLCJuYW1lU2VsZWN0b3IiLCJkZXNjcmlwdGlvblNlbGVjdG9yIiwiYXZhdGFyU2VsZWN0b3IiLCJfZGVzY3JpcHRpb24iLCJfYXZhdGFyIiwiZ2V0VXNlckluZm8iLCJzZXRVc2VySW5mbyIsInBvcHVwSW1hZ2UiLCJfaW1hZ2UiLCJfbW9kYWxUaXRsZSIsInBvcHVwRWRpdCIsImhhbmRsZVN1Ym1pdHMiLCJmb3JtRWRpdFZhbGlkYXRvciIsInBvcHVwQWRkIiwicmVzZXQiLCJmb3JtQWRkVmFsaWRhdG9yIiwicG9wdXBBdmF0YXIiLCJmb3JtQXZhdGFyVmFsaWRhdG9yIiwicG9wdXBEZWxldGUiLCJnZXRDYXJkSW5mbyIsImNhcmQiLCJfY2FyZCIsInRoaXNDYXJkIiwicmVxdWVzdCIsInBvcHVwIiwiY2F0Y2giLCJjb25zb2xlIiwiZXJyb3IiLCJmaW5hbGx5IiwiZXJyIiwibG9nIiwidXNlclByb2ZpbGUiLCJ1c2VyQ2FyZHMiXSwic291cmNlUm9vdCI6IiJ9